/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2019-08-23 10:55:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import com.hcl.library.DaoConnection;
import java.sql.Connection;

public final class Menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("com.hcl.library.DaoConnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script>\r\n");
      out.write("function search(){\r\n");
      out.write("\tvar x = document.getElementById('search');\r\n");
      out.write("\tif(x.style.visibility === 'hidden'){\r\n");
      out.write("\t\tx.style.visibility = 'visible';\r\n");
      out.write("\t} else {\t\r\n");
      out.write("\t\tx.style.visibility = 'hidden';\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function issue(){\r\n");
      out.write("\tvar x = document.getElementById('issueBook');\r\n");
      out.write("\tif(x.style.visibility === 'hidden'){\r\n");
      out.write("\t\tx.style.visibility = 'visible';\r\n");
      out.write("\t} else {\t\r\n");
      out.write("\t\tx.style.visibility = 'hidden';\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function Return(){\r\n");
      out.write("\tvar x = document.getElementById('Return');\r\n");
      out.write("\tif(x.style.visibility === 'hidden'){\r\n");
      out.write("\t\tx.style.visibility = 'visible';\r\n");
      out.write("\t} else {\t\r\n");
      out.write("\t\tx.style.visibility = 'hidden';\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function myfunction(){\r\n");
      out.write("\tvar x = document.getElementById('submit');\r\n");
      out.write("\tvar y = document.getElementsByName(\"ckid\");\r\n");
      out.write("\tvar count = 0;\r\n");
      out.write("\tfor(var i=0;i<y.length;i++){\r\n");
      out.write("\t\tif(y[i].checked){\r\n");
      out.write("\t\t\tcount++;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t}\r\n");
      out.write("\tif(count==0){\r\n");
      out.write("\t\tx.disabled = true;\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\tx.disabled = false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");
      out.write("\t\t");
String user = (String) session.getAttribute("user") ;
      out.write("\r\n");
      out.write("\t\t<a>Welcome : ");
      out.print(user);
      out.write("</a>\r\n");
      out.write("\t\t<a href = \"Login.jsp\"><input type=\"button\" value=\"Logout\" /></a>\r\n");
      out.write("\t<table bgcolor=\"yellow\" Style=\"color:purple; width: 586px\">\r\n");
      out.write("\t\t<tr><th><a>Account Details</a></th>\r\n");
      out.write("\t\t<th><input type=\"button\" value=\"Search Books\" onclick=\"search()\"></a></th>\r\n");
      out.write("\t\t<th><input type=\"button\" value=\"Issued Book\" onclick=\"issue()\"></a></th>\r\n");
      out.write("\t\t<th><input type=\"button\" value=\"Return History\" onclick=\"Return()\"></a></th></tr></table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</center>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"search\" style=\"visibility: hidden; position: absolute; top: 100px; left: 100px\">\r\n");
      out.write("\r\n");
      out.write("\t\t<form action=\"Search.jsp\">\r\n");
      out.write("\t\t<table bgcolor=\"green\">\r\n");
      out.write("\t\t<tr><td>\r\n");
      out.write("\t\t<input type=\"radio\" name=\"search\" value=\"author\" /> Author</td></tr>\r\n");
      out.write("\t\t<tr><td>\r\n");
      out.write("\t \t<input type=\"radio\" name=\"search\" value=\"name\" />Book Name</td></tr>\r\n");
      out.write("\t \t<tr><td>\r\n");
      out.write("\t\t<input type=\"radio\" name=\"search\" value=\"all\" checked /> All Books</td></tr>\r\n");
      out.write("\t\t<tr><td>\r\n");
      out.write("\t\t<input type=\"radio\" name=\"search\" value=\"dept\" /> Department</td></tr>\r\n");
      out.write("\t\t<tr><td>\r\n");
      out.write("\t\t<input type=\"radio\" name=\"search\" value=\"id\" />\tBook ID</td></tr>\r\n");
      out.write("\t\t<tr><td>\r\n");
      out.write("\t\t<input type=\"text\" name=\"searchbook\" /></td></tr>\r\n");
      out.write("\t\t<tr><td>\r\n");
      out.write("\t\t");
String radio = request.getParameter("search");
		  String text = request.getParameter("searchbook");
      out.write("\r\n");
      out.write("\t\t<a href=\"Search.jsp?search=");
      out.print(radio);
      out.write("&searchbook=");
      out.print(text);
      out.write("\"><input type=\"submit\" Value=\"searchBook\" style=\"width: 173px;\" /></a></td></tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("<div id = \"issueBook\" style=\"visibility: hidden; position: absolute; top: 100px; left: 500px\">\r\n");
      out.write("\t<form action=\"Return.jsp\">\r\n");
      out.write("\t<center>\r\n");
      out.write("\t");

		user = (String)session.getAttribute("user");
		Connection con = DaoConnection.getconnection();
		PreparedStatement pst;
		ResultSet rs;
		String cmd = "Select * from  TranBook where Username =?";
		pst= con.prepareStatement(cmd);
		pst.setString(1, user);
		rs = pst.executeQuery();
		
      out.write("<table><tr style=\"color:red\" bgcolor=\"yellow\"><td>Book ID </td><td>Taken At</td><td>Return</td></tr>");

		while(rs.next()){
			
      out.write("\r\n");
      out.write("\t\t\t<tr bgcolor=\"orange\">\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getInt("BookId") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString("Fromdate") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"checkbox\" name=\"ckid\" value=");
      out.print(rs.getInt("BookId"));
      out.write(" onchange=\"myfunction()\" /></td></tr>\r\n");
      out.write("\t\t");

		}
	
      out.write("<tr><td>\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"submit\" id=\"submit\" value=\"Return Book\" disabled/></td></tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</center>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id = \"Return\" style=\"visibility: hidden; position: absolute; top: 100px; left: 1000px\">\r\n");
      out.write("<center>\r\n");

	
	con = DaoConnection.getconnection();
	cmd = "select * from transReturn where username = ?";
	pst = con.prepareStatement(cmd);
	pst.setString(1, user);
	rs = pst.executeQuery();
	
      out.write("\r\n");
      out.write("\t<table><tr style=\"color:red\" bgcolor=\"yellow\"><td>Book ID </td><td>From Date</td><td>To Date</td></tr>\r\n");
      out.write("\t");

	while(rs.next()){
		
      out.write("\r\n");
      out.write("\t\t<tr bgcolor=\"orange\">\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getInt("bookid") );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("Fromdate") );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("Todate") );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
