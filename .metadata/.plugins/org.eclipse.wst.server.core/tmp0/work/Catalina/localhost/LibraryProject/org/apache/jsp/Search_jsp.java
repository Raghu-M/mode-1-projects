/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2019-08-23 10:45:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.websocket.OnClose;
import java.io.UncheckedIOException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import com.hcl.library.DaoConnection;
import java.sql.Connection;

public final class Search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.UncheckedIOException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("javax.websocket.OnClose");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("com.hcl.library.DaoConnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script>\r\n");
      out.write("function myfunction(){\r\n");
      out.write("\tvar x = document.getElementById('submit');\r\n");
      out.write("\tvar y = document.getElementsByName(\"ckid\");\r\n");
      out.write("\tvar count = 0;\r\n");
      out.write("\tfor(var i=0;i<y.length;i++){\r\n");
      out.write("\t\tif(y[i].checked){\r\n");
      out.write("\t\t\tcount++;\r\n");
      out.write("\t\t} \r\n");
      out.write("\t}\r\n");
      out.write("\tif(count==0){\r\n");
      out.write("\t\tx.disabled = true;\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\tx.disabled = false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");
  String search = request.getParameter("search");
	String searchbk = request.getParameter("searchbook");
	String user = (String)session.getAttribute("user");
	Connection con = DaoConnection.getconnection();
	String cmd = null;
	PreparedStatement pst = null;
	ResultSet rs =null,res=null;
	if(search.equals("author")){
		cmd = "select * from books where author = ?";
	 	pst = con.prepareStatement(cmd);
		pst.setString(1, searchbk);
		rs = pst.executeQuery();
	} else if(search.equals("name")){
		cmd = "select * from books where name = ?";
		pst = con.prepareStatement(cmd);
		pst.setString(1, searchbk);
		rs = pst.executeQuery();
	} else if(search.equals("dept")){
		cmd = "select * from books where Dept = ?";
		pst = con.prepareStatement(cmd);
		pst.setString(1, searchbk);
		rs = pst.executeQuery();
	} else if(search.equals("id")){
		cmd = "select * from books where id = ?";
		pst = con.prepareStatement(cmd);
		pst.setInt(1, Integer.parseInt(searchbk));
		rs = pst.executeQuery();
	} else if(search.equals("all")){
		cmd = "select * from books ";
		pst = con.prepareStatement(cmd);
		rs = pst.executeQuery();
	} 
      out.write("\r\n");
      out.write("\t<form action=\"Borrow.jsp\">\r\n");
      out.write("\t");
      out.print(user );
      out.write("\r\n");
      out.write("\t<table>\r\n");
      out.write("\t<tr style=\"color:red\" bgcolor=\"yellow\"><td>Book ID </td><td>Name</td><td>Author</td>\r\n");
      out.write("\t<td>Edition</td><td>Department</td><td>TotalBooks</td><td>borrow</td></tr>\r\n");
      out.write("\t");
 
	cmd = "select BookId from TranBook where Username = ? ";
	pst = con.prepareStatement(cmd);
	pst.setString(1, user);
	res = pst.executeQuery();
	while(rs.next()){
		if(rs.getInt("totalBooks")!= 0){
		
      out.write("\r\n");
      out.write("\t\t<tr bgcolor=\"orange\">\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getInt("id") );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("name") );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("author") );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("edition") );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getString("dept") );
      out.write("</td>\r\n");
      out.write("\t\t\t<td>");
      out.print(rs.getInt("totalBooks") );
      out.write("</td>\r\n");
      out.write("\t\t\t");
if(rs.getInt("totalBooks")==0){ 
      out.write("\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"ckid\" disabled /></td>\r\n");
      out.write("\t\t\t");
}else 
      out.write("<td><input type=\"checkbox\"  name=\"ckid\" value=");
      out.print(rs.getInt("id"));
      out.write(" onchange=\"myfunction()\"/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t");
} 
		}
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</table></br>\r\n");
      out.write("<a  href=\"Menu.jsp\"><input type=\"button\" value=\"back to menu\" /></a>\r\n");
      out.write("<input type=\"submit\"  id =\"submit\" value=\"borrow book\"  disabled/>\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
